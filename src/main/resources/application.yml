azure:
  storage:
    account-name: put-your-azure-storage-account-name-here
    account-key: put-your-azure-storage-account-key-here
    container-name: put-your-azure-storage-container-name-here
    allow-telemetry: false
    enable-https: true


connector:
  azure:
    blob:
      kafka:
        group-id: kafka-group-id-of-the-uploader
        topics: list-of-topics-to-upload-to-blob-storage

spring.cloud.stream.kafka.binder.producerProperties:
  allow.auto.create.topics: false
  key.deserializer: org.apache.kafka.common.serialization.ByteDeserializer
  value.deserializer: org.apache.kafka.common.serialization.ByteDeserializer

spring.cloud.stream.kafka.binder.consumerProperties:
  allow.auto.create.topics: false
  key.deserializer: org.apache.kafka.common.serialization.ByteDeserializer
  value.deserializer: org.apache.kafka.common.serialization.ByteDeserializer

spring:
  cloud:
    stream:
      kafka:
        binder:
          consumer-properties:
            group.id: server1
            auto.offset.reset: earliest
            key.deserializer: org.apache.kafka.common.serialization.ByteDeserializer
            value.deserializer: org.apache.kafka.common.serialization.ByteDeserializer
          producer-properties:
            allow.auto.create.topics: false
            key.deserializer: org.apache.kafka.common.serialization.ByteDeserializer
            value.deserializer: org.apache.kafka.common.serialization.ByteDeserializer
      bindings:
        handle-out-0:
          destination: testEmbeddedOut
        handle-in-0:
          destination: testEmbeddedIn
          group: embeddedKafkaApplication
  profiles:
    active: local

logging:
  level:
    org.springframework.kafka.*: OFF
    org.springframework.kafka.listener.[KafkaMessageListenerContainer$ListenerConsumer]: OFF
    org.apache.kafka.*: OFF
    kafka.*: OFF
    org.apache.zookeeper.*: OFF
